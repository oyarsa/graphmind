[project]
name = "paper"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
license = {text = "GPL-3.0-or-later"}
requires-python = ">=3.12"
dependencies = [
    "aiohttp>=3.10.5",
    "pydantic>=2.9.2",
    "colorlog>=6.8.2",
    "matplotlib>=3.9.2",
    "networkx>=3.3",
    "openai>=1.45.0",
    "python-dotenv>=1.0.1",
    "semanticscholar>=0.8.4",
    "tqdm>=4.66.5",
    "habanero>=1.2.6",
    "thefuzz>=0.22.1",
    "typer>=0.12.5",
    "scikit-learn>=1.5.2",
    "rich>=13.9.2",
    "click>=8.1.7",
    "backoff>=2.2.1",
    "tiktoken>=0.8.0",
    "aioboto3>=13.2.0",
    "aiobotocore>=2.15.2",
    "botocore>=1.35.36",
    "types-aioboto3[full]>=13.2.0.post1",
    "boto3>=1.35.36",
    "boto3-stubs[full]>=1.35.56",
    "aiolimiter>=1.1.0",
    "sentence-transformers>=3.3.0",
    "gdown>=5.2.0",
    "aiofiles>=24.1.0",
    "pandas>=2.2.3",
]

[dependency-groups]
dev = [
    "cosy",
    "ipython>=8.27.0",
    "jupyterlab>=4.2.5",
    "pdoc>=15.0.0",
    "pre-commit>=3.8.0",
    "pyright>=1.1.389",
    "pytest>=8.3.3",
    "ruff>=0.8",
]

[tool.uv.sources.cosy]
git = "https://github.com/oyarsa/x.git"
subdirectory = "cosy"
tag = "cosy-0.2.0"

[project.scripts]
preprocess = "paper.preprocess:app"
gpt = "paper.gpt.cli:app"
scimon = "paper.scimon.cli:app"

[tool.ruff.lint.isort]
known-first-party = ["paper"]

[tool.ruff.lint]
select = [
    "E",        # Code style
    "W",        # Code style
    "F",        # Pyflakes
    "I",        # Imports
    "ISC",      # Implicit string concat
    "N",        # PEP-8 naming
    "PL",       # Pylint
    "RUF",      # Ruff-specific
    "SIM",      # Simplify
    "TRY",      # Exceptions
    "UP",       # Upgrade to new constructs
    "ERA",      # Commented-out code
    "D",        # Documentation
    "FURB",     # Modernisation
    "PTH",      # Pathlib usage
    "RET",      # Unnecessary elses
    "G",        # Logging format
    "DTZ",      # Timezones
    "B",        # Likely bugs
    "C",        # Comprehensions
    "ASYNC",    # Async pitfalls
    "EXE",      # Executable (shebang)S
    "ANN",      # Type annotations
    "PYI",      # Appropriate type hints for specifc cases
    "PERF",     # Performance anti-patterns
]
ignore = [
    "PLR0911",  # Too many return statements
    "PLR0912",  # Too many branches
    "PLR0913",  # Too many arguments
    "PLR0915",  # Too many statements
    "PLR2004",  # Magic value used in comparison
    "E501",     # Line too long (let ruff format take care of this)
    "TRY003",   # Long messages outside exception class
    "SIM108",   # Use ternary operation instead of if-else block
    "ISC001",   # Incompatible with the formatter
    "D202",     # Empty lines between function docstring and body
    "D1",       # Undocumented items
    "PTH123",   # `open` instead of `Path.open`
    "G004",     # f-strings in logging
    "B905",     # `zip` without `strict`
    "C901",     # "too complex" functions
    "ASYNC110", # 'asyncio.sleep' in loop
    "PERF401",  # Manual list comprehensions
    "ANN401",   # Any
    "PLC0206",  # Dictionary iteration without items
    "N999",     # False positive on `paper-hypergraph` (the module is named `paper`)
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
# Ruff also handles this, and it needs to be enabled there for fixAll to fix it,
# so we disable it here to avoid duplicate errors
reportUnusedImport = false
typeCheckingMode = "strict"

# Allow unit tests to import private things
executionEnvironments = [
  { root = "tests", reportPrivateUsage = false }
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

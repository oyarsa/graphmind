[[prompts]]
name = "simple"
type = "graph"
prompt = """The following data contains information about a scientific paper. It includes the \
paper's title, abstract, the main text from the paper. The goal is to represent all the \
relevant information from the paper as a graph.

Your task is to extract entities of the following types:
- title: the title of the paper
- primary_area: what scientific primary area the paper is from. Choose one from the \
following list: {primary_areas}.
- tldr: a sentence that summarises the paper
- claim: summarise what the paper claims to contribute, especially claims made in the \
abstract, introduction, discussion and conclusion. Pay attention to the key phrases \
that highlight new findings or interpretations.
- method: for each claim, identify the methods used to validate the claims from the \
method sections. These include the key components: algorithms, theoretical framework \
or novel techniques introduced.
- experiment: what models, baselines, datasets, etc. that were used in experiments to \
validate the methods.

Extract these entities and the relationships between them as a graph. The paper title is \
the main node and represents the paper. There are restrictions for what types of \
connections can be made between node based on their types. The only allowed edges are:

- There's only one title node.
- There can be no incoming edges to the paper title node.
- Edges between nodes of the same type cannot exist.
- The graph is hierarchical, and all edges are from a node type above to one below. The \
hierarchy is title > primary_area = keyword = tldr > claim > method > experiment. \
Note that tldr, primary_area and keyword are on the same level.
- There's only one edge from the title node, and it's to the tldr node.
- title -> tldr (1:1): there is only one tldr node, and it's connected only to the title.
- title -> primary_area (1:1): there is only one primary_area node, and it's connected \
only to the title.
- title -> keyword (1:N): there can be up to 5 keyword nodes, and they're only connected \
to the title.
- tldr -> claim (1:N): there can be many claim nodes, and they're connected only to the \
tldr node.
- claim -> method (N:M): there can be many method nodes, and they're only connected to the \
claim nodes. A claim can connect to multiple methods, and a method can connect to \
multiple claims.
- method -> experiment (N:M): there can be many experiments, and they're connected only to \
the method nodes. An experiment can connect to multiple methods, and a method can \
connect to multiple claims.

Each entity must have a unique index. You must use these indexes to represent the \
relationships between the entities.

All entity types should be present in the output.

#####
-Data-
Title: {title}
Abstract: {abstract}

Main text:
{main_text}

#####
Output:
"""

[[prompts]]
name = "bullets"
type = "graph"
prompt = """The following data contains information about a scientific paper. It includes the
paper's title, abstract, the main text. The goal is to represent all the relevant
information from the paper as a graph.

Your task is to extract entities of the following types, and the relationships between
them:
- `title`: the title of the paper.
- `primary_area`: what scientific primary area the paper is from. It must be one from
the following list: {primary_areas}.
- `tldr`: a sentence that summarises the paper from the abstract.
- `claim`: summarise what the paper claims to contribute, especially claims made in the
abstract, introduction, discussion and conclusion. Pay attention to the key phrases
that highlight new findings or interpretations.
- `method`: for each `claim`, identify the methods used to validate the claims from the
method sections. These include the key components: algorithms, theoretical framework
or novel techniques introduced.
- `experiment`: what models, baselines, datasets, etc. were used in experiments to
validate the `methods`.

Extract these entities and the relationships between them as a graph. The paper `title`
is the root entity. You must follow these rules when generating the entities and
relationships:

- There's only one `title` entity. It is the root entity and there cannot be any
incoming entities to it.
- Only relationships between entities of different types are allowed.
- The `title` entity only has relationships to three types of entities: `tldr`,
`primary_area` and `keywords`.
- There is only `tldr` entity, only one `primary_area`, and up to 5 `keywords`.
- The graph is hierarchical and organised in levels.
- The first level contains only the `title` entity.
- The second level contains the `tldr` entity, the `primary_area` and the `keywords`.
These entities are only connected to the `title` entity.
- The third level contains the `claim` entities. These are connected only to the `tldr`
entity. There can be an unlimited number of `claim` entities, and there must be at least
3.
- The fourth level contains the `method` entities. These are connected only to `claim`
entities. There can be an unlimited number of `method` entities and there must be at
least 3. Each `claim` entity can connect to multiple `method` entities.
- The fifth and final level contains `exeriment` entities. These are connected only to
the `method` entities. There can be an unlimited number of `experiment` entities and
there must be at least 3. Each `method` entity can connect to multiple `experiment`
entities.
- The graph is hierarchical, and all relationships are from a entity type above to one
below. The hierarchy is `title` > `primary_area`, `keyword`, `tldr` > `claim` > `method`
> `experiment`. Note that `tldr`, `primary_area` and `keyword` are on the same level.

Each entity must have a unique index. You must use these indexes to represent the
relationships between the entities.

All entity types should be present in the output.

#####
-Data-
Title: {title}
Abstract: {abstract}

Main text:
{main_text}

#####
Output:
"""

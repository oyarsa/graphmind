[[prompts]]
name = "strict"
type = "strict"
prompt = """
The following data contains information about a scientific paper. It includes the
paper's title, abstract, and the main text. The goal is to represent all the relevant
information from the paper as a graph.

Your task is to extract entities of the following types and the relationships between
them. All entities must have different names.
- `title`: the title of the paper.
- `primary_area`: what scientific primary area the paper is from. It must be one from
the following list: {primary_areas}.
- `tldr`: a sentence that summarises the paper from the abstract.
- `claim`: summarise what the paper claims to contribute, especially claims made in the
abstract, introduction, discussion and conclusion. Pay attention to the key phrases
that highlight new findings or interpretations.
- `method`: for each `claim`, identify the methods used to validate the claims from the
method sections. These include the key components: algorithms, theoretical framework
or novel techniques introduced.
- `experiment`: what models, baselines, datasets, etc. were used in experiments to
validate the `methods`.

Extract these entities and the relationships between them. The paper `title` is the root
entity. You must follow these rules when generating the entities and relationships:

- The `title` connects to the `primary_area`, the `keywords` and the `tldr` sentence.
- The `tldr` sentence connects to all the claims.
- Each `claim` can connect to one or more `methods`.
- Each `method` can connect to one or more `experiments`.
- Every `method` and `experiment` must connected to at least one entity.

`Claims`, `methods` and `experiments` must have unique indices. In both `method` and
`experiments` `source_indices`, you assign an index to the connected entity, where the
index is in the original list that entity belongs to.

All entity types should be present in the output. None of the lists in the output can be
empty. Entity names must be unique, even if they have different types.

#####
-Data-
Title: {title}
Abstract: {abstract}

Main text:
{main_text}

#####
Output:
"""

[[prompts]]
name = "strict2"
type = "strict2"
prompt = """
The following data contains information about a scientific paper. It includes the
paper's title, abstract, and the main text. The goal is to represent all the relevant
information from the paper as a graph.

Your task is to extract entities of the following types and the relationships between
them. All entities must have different names.
- `title`: the title of the paper.
- `primary_area`: what scientific primary area the paper is from. It must be one from
the following list: {primary_areas}.
- `tldr`: a sentence that summarises the paper from the abstract.
- `claim`: summarise what the paper claims to contribute, especially claims made in the
abstract, introduction, discussion and conclusion. Pay attention to the key phrases
that highlight new findings or interpretations.
- `method`: for each `claim`, identify the methods used to validate the claims from the
method sections. These include the key components: algorithms, theoretical framework
or novel techniques introduced.
- `experiment`: what models, baselines, datasets, etc. were used in experiments to
validate the `methods`.

Extract these entities and the relationships between them. The paper `title` is the root
entity. You must follow these rules when generating the entities and relationships:

- The `title` connects to the `primary_area`, the `keywords` and the `tldr` sentence.
- The `tldr` sentence connects to all the claims.
- Each `claim` must connect to one or more `methods`.
- Each `method` must connect to one or more `experiments`.
- Every `method` and `experiment` must connected to at least one entity.
- Each `method` has a unique index starting from 0. These are indices from the `methods`
  list in the graph. `claims` will connect to methods by these indices.
- Each `experiment` has a unique index starting from 0. These are indices from the
  `experiments` list in the graph. `methods` will connect to experiments by these
  indices.

All entity types should be present in the output. None of the lists in the output can be
empty. Entity names must be unique across all types.

#####
-Data-
Title: {title}
Abstract: {abstract}

Main text:
{main_text}

#####
Output:
"""

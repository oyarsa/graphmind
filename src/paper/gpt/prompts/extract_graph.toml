[[prompts]]
name = "full"
type = "full"
system = """\
Given the following scientific paper, extract the important entities from the text and \
the relationships between them. The goal is to build a faithful and concise representation \
of the paper that captures the most important elements necessary to evaluate its novelty.
"""
prompt = """
The following data contains information about a scientific paper. It includes the
paper's title, abstract, and the main text. The goal is to represent all the relevant
information from the paper as a graph.

Your task is to extract entities of the following types and the relationships between
them. All entities must have different text descriptions.
- `title`: the title of the paper.
- `primary_area`: what scientific primary area the paper is from. It must be one from
the following list: {primary_areas}.
- `tldr`: a sentence that summarises the paper from the abstract.
- `claim`: summarise what the paper claims to contribute, especially claims made in the
abstract, introduction, discussion and conclusion. Pay attention to the key phrases
that highlight new findings or interpretations.
- `method`: for each `claim`, identify the methods used to validate the claims from the
method sections. These include the key components: algorithms, theoretical framework
or novel techniques introduced.
- `experiment`: what models, baselines, datasets, etc. were used in experiments to
validate the `methods`.

Extract these entities and the relationships between them. The paper `title` is the root
entity. You must follow these rules when generating the entities and relationships:

- The `title` connects to the `primary_area`, the `keywords` and the `tldr` sentence.
- The `tldr` sentence connects to all the claims.
- Each `claim` must connect to one or more `methods`.
- Each `method` must connect to one or more `experiments`.
- Every `method` and `experiment` must connected to at least one entity.
- Each `method` has a unique index starting from 0. These are indices from the `methods`
  list in the graph. `claims` will connect to methods by these indices.
- Each `experiment` has a unique index starting from 0. These are indices from the
  `experiments` list in the graph. `methods` will connect to experiments by these
  indices.

All entity types should be present in the output. None of the lists in the output can be
empty.

#####
-Data-
Title: {title}
Abstract: {abstract}

Main text:
{main_text}

#####
Output:
"""

[[prompts]]
name = "nomethod"
type = "nomethods"
system = """\
Given the following scientific paper, extract the important entities from the text and \
the relationships between them. The goal is to build a faithful and concise representation \
of the paper that captures the most important elements necessary to evaluate its novelty.
"""
prompt = """
The following data contains information about a scientific paper. It includes the
paper's title, abstract, and the main text. The goal is to represent all the relevant
information from the paper as a graph.

Your task is to extract entities of the following types and the relationships between
them. All entities must have different text descriptions.
- `title`: the title of the paper.
- `primary_area`: what scientific primary area the paper is from. It must be one from
the following list: {primary_areas}.
- `tldr`: a sentence that summarises the paper from the abstract.
- `claim`: summarise what the paper claims to contribute, especially claims made in the
abstract, introduction, discussion and conclusion. Pay attention to the key phrases
that highlight new findings or interpretations.
- `experiment`: what models, baselines, datasets, etc. were used in experiments to
support the `claims`.

Extract these entities and the relationships between them. The paper `title` is the root
entity. You must follow these rules when generating the entities and relationships:

- The `title` connects to the `primary_area`, the `keywords` and the `tldr` sentence.
- The `tldr` sentence connects to all the claims.
- Each `claim` must connect to one or more `experiments`.
- Every `experiment` must connected to at least one entity.
- Each `experiment` has a unique index starting from 0. These are indices from the
  `experiments` list in the graph. `claims` will connect to experiments by these
  indices.

All entity types should be present in the output. None of the lists in the output can be
empty.

#####
-Data-
Title: {title}
Abstract: {abstract}

Main text:
{main_text}

#####
Output:
"""

[[prompts]]
name = "noexperiments"
type = "noexperiments"
system = """\
Given the following scientific paper, extract the important entities from the text and \
the relationships between them. The goal is to build a faithful and concise representation \
of the paper that captures the most important elements necessary to evaluate its novelty.
"""
prompt = """
The following data contains information about a scientific paper. It includes the
paper's title, abstract, and the main text. The goal is to represent all the relevant
information from the paper as a graph.

Your task is to extract entities of the following types and the relationships between
them. All entities must have different text descriptions.
- `title`: the title of the paper.
- `primary_area`: what scientific primary area the paper is from. It must be one from
the following list: {primary_areas}.
- `tldr`: a sentence that summarises the paper from the abstract.
- `claim`: summarise what the paper claims to contribute, especially claims made in the
abstract, introduction, discussion and conclusion. Pay attention to the key phrases
that highlight new findings or interpretations.
- `method`: for each `claim`, identify the methods used to validate the claims from the
method sections. These include the key components: algorithms, theoretical framework
or novel techniques introduced.

Extract these entities and the relationships between them. The paper `title` is the root
entity. You must follow these rules when generating the entities and relationships:

- The `title` connects to the `primary_area`, the `keywords` and the `tldr` sentence.
- The `tldr` sentence connects to all the claims.
- Each `claim` must connect to one or more `methods`.
- Every `method` must connected to at least one entity.
- Each `method` has a unique index starting from 0. These are indices from the `methods`
  list in the graph. `claims` will connect to methods by these indices.

All entity types should be present in the output. None of the lists in the output can be
empty.

#####
-Data-
Title: {title}
Abstract: {abstract}

Main text:
{main_text}

#####
Output:
"""

[[prompts]]
name = "nodetail"
type = "nodetail"
system = """\
Given the following scientific paper, extract the important entities from the text and \
the relationships between them. The goal is to build a faithful and concise representation \
of the paper that captures the most important elements necessary to evaluate its novelty.
"""
prompt = """
The following data contains information about a scientific paper. It includes the
paper's title, abstract, and the main text. The goal is to represent all the relevant
information from the paper as a graph.

Your task is to extract entities of the following types and the relationships between
them. All entities must have different text descriptions.
- `title`: the title of the paper.
- `primary_area`: what scientific primary area the paper is from. It must be one from
the following list: {primary_areas}.
- `tldr`: a sentence that summarises the paper from the abstract.
- `claim`: summarise what the paper claims to contribute, especially claims made in the
abstract, introduction, discussion and conclusion. Pay attention to the key phrases
that highlight new findings or interpretations.
- `method`: for each `claim`, identify the methods used to validate the claims from the
method sections. These include the key components: algorithms, theoretical framework
or novel techniques introduced.
- `experiment`: what models, baselines, datasets, etc. were used in experiments to
validate the `methods`.

Extract these entities and the relationships between them. The paper `title` is the root
entity. You must follow these rules when generating the entities and relationships:

- The `title` connects to the `primary_area`, the `keywords` and the `tldr` sentence.
- The `tldr` sentence connects to all the claims.
- Each `claim` must connect to one or more `methods`.
- Each `method` must connect to one or more `experiments`.
- Every `method` and `experiment` must connected to at least one entity.
- Each `method` has a unique index starting from 0. These are indices from the `methods`
  list in the graph. `claims` will connect to methods by these indices.
- Each `experiment` has a unique index starting from 0. These are indices from the
  `experiments` list in the graph. `methods` will connect to experiments by these
  indices.

All entity types should be present in the output. None of the lists in the output can be
empty.

#####
-Data-
Title: {title}
Abstract: {abstract}

Main text:
{main_text}

#####
Output:
"""

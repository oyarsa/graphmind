[[prompts]]
name = "multi-v2"
type = "multi-terms"
prompt = """You are a scientific term extractor analyzing research papers. Your task is \
to identify terms and their relationships from the paper title and abstract.

Extract these categories of scientific terms:

1. TASKS: Core problems, objectives, or applications the paper addresses
   - Usually found in problem statements or motivation sections
   - Must be specific technical tasks, not general goals
   - Example: "speech unit boundaries detection", "entity recognition"

2. METHODS: Technical approaches used to solve the tasks
   - Include algorithms, models, architectures used or proposed
   - Must be specific techniques, not generic terms like "approach" or "framework"
   - Example: "attention mechanism", "knowledge distillation"

3. METRICS: Specific measures used to evaluate results
   - Include quantitative measures and evaluation criteria
   - Example: "accuracy", "F1-score", "ROUGE"

4. RESOURCES: Resources and data used
   - Include datasets, tools, and resources
   - Example: "ACL papers", "PubMed abstracts"

5. RELATIONS: Identify relationships between terms, especially:
   - Which methods are used for which tasks
   - Format: (method, "used-for", task)
   - Example: ("attention mechanism", "used-for", "speech recognition")

Guidelines:
- A term can be in only one of the categories
- Extract complete technical phrases, not single words
- Preserve technical terminology exactly as written
- Include only terms that are central to the paper's contribution
- Focus especially on identifying clear "used-for" relationships between methods and \
tasks
- Do not include generic research terms unless part of a specific technical phrase

#####
-Data-
Title: {title}

Abstract: {abstract}

#####
Output:
"""

[[prompts]]
name = "multi-v1"
type = "multi-terms"
prompt = """You are a scientific term extractor analyzing research papers. Your CRITICAL task is \
to extract terms EXACTLY as they appear in the paper abstract, with no modifications.

CRITICAL RULE: Every term you extract MUST be an exact substring of the abstract - if you can't \
find the exact phrase in the abstract, do not extract it. Never combine separate phrases or \
modify the text in any way.

Extract these categories by copying from the abstract:

1. TASKS: Core problems/objectives
   - First locate the full phrase in the abstract
   - Then copy it exactly as it appears
   - CORRECT: If abstract has "cross-lingual transfer learning", extract exactly that
   - WRONG: Modifying the phrase in any way like "transfer learning"

2. METHODS: Technical approaches
   - First locate the complete technical phrase in the abstract
   - Then copy it exactly as written
   - CORRECT: If abstract has "BERT-based encoder", extract exactly that
   - WRONG: Modifying to "BERT encoder" or any other variation

3. METRICS: Evaluation measures
   - Copy exactly as they appear
   - CORRECT: If abstract has "ROUGE-L", extract "ROUGE-L"
   - WRONG: Extracting "ROUGE" or any variation

4. RESOURCES: Datasets and tools
   - Copy names exactly as written
   - CORRECT: If abstract has "ACL Anthology corpus", extract exactly that
   - WRONG: Extracting "ACL corpus" or any variation

5. RELATIONS: Term relationships
   - Both terms must be exact copies from the abstract
   - Format: (copy-pasted method, "used-for", copy-pasted task)
   - CORRECT: If abstract has "BERT encoder for machine translation",
     extract: ("BERT encoder", "used-for", "machine translation")
   - WRONG: Any modified versions of the terms

#####
-Data-
Abstract: {abstract}

#####
Output:
"""

[[prompts]]
name = "multi-v3"
type = "multi-terms"
prompt = """You are a scientific term extractor analyzing research papers. Extract terms as they \
appear in the abstract. Minimize modifications to the terms, unless it is to comply with the rules.

CRITICAL RULES:
1. Every term must be an exact substring of the abstract
2. When mulitple terms refer to the same entity, use a common term for all of them
3. When a term contains an abbreviation, expand the abbreviation
4. For each method identified, determine what task(s) it helps accomplish
5. For each metric identified, determine what task(s) it evaluates
6. For each resource identified, determine what task(s) it supports

Extract these categories:

1. TASKS: Core problems/objectives
  - Include both explicit and implicit tasks
  - Example: "cross-entropy training of deep neural networks" â†’ extract exactly that

2. METHODS: Technical approaches
  - Include algorithms, frameworks, and specific techniques
  - For each method, identify the task(s) it addresses
  - Example: If abstract has "Hessian-free optimization for training neural networks"
    - Extract method: "Hessian-free optimization"
    - Create relation: ("Hessian-free optimization", "used-for", "training neural networks")

3. METRICS: Evaluation measures
  - Include all quantitative measures
  - For each metric, identify the task it evaluates
  - Example: If abstract mentions "accuracy for machine translation"
    - Extract metric: "accuracy"
    - Create relation: ("accuracy", "used-for", "machine translation")

4. RESOURCES: Datasets and tools
  - Include datasets, code, benchmarks
  - For each resource, identify the task it supports
  - Example: If abstract mentions "using WordNet for word sense disambiguation"
    - Extract resource: "WordNet"
    - Create relation: ("WordNet", "used-for", "word sense disambiguation")

5. RELATIONS: Term relationships
  - Create "used-for" relations between:
    - Each method and its corresponding task(s)
    - Each metric and the task(s) it evaluates
    - Each resource and the task(s) it supports
  - Both terms must be exact copies from the abstract
  - Format: (source_term, "used-for", target_task)

VERIFICATION STEPS:
1. For each method: Is there at least one "used-for" relation to a task?
2. For each metric: Is there at least one "used-for" relation to a task?
3. For each resource: Is there at least one "used-for" relation to a task?
4. For each term: Does it contain an abbreviation that you can expand?
5. For each combination of terms: Do different words refer to the same entity? Can they be merged?

#####
-Data-
Abstract: {abstract}

#####
Output:
"""
